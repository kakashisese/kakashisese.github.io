<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://kakashisese.github.io</id>
    <title>用画笔记录生活</title>
    <updated>2020-03-22T09:41:09.669Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://kakashisese.github.io"/>
    <link rel="self" href="https://kakashisese.github.io/atom.xml"/>
    <subtitle>艺术就是生命</subtitle>
    <logo>https://kakashisese.github.io/images/avatar.png</logo>
    <icon>https://kakashisese.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 用画笔记录生活</rights>
    <entry>
        <title type="html"><![CDATA[nkoj p3000 【nodgd造水题】嵩嵩]]></title>
        <id>https://kakashisese.github.io/post/nkoj-p3000-nodgd-zao-shui-ti-song-song/</id>
        <link href="https://kakashisese.github.io/post/nkoj-p3000-nodgd-zao-shui-ti-song-song/">
        </link>
        <updated>2020-03-22T09:40:45.000Z</updated>
        <content type="html"><![CDATA[<h1 id="nkoj-p3000-nodgd造水题嵩嵩">nkoj p3000 【nodgd造水题】嵩嵩</h1>
<h2 id="问题描述">问题描述</h2>
<blockquote>
<p>受何老板之托，嵩嵩在美国为何老板采购的若干吨货物。这批货物已通过水路运送到了我国某沿海城市，现在需要通过公路将这些货物运送到何老板家。嵩嵩的地图上有N(2 &lt;= N &lt;= 200) 座城市，编号1到N，嵩嵩在1号城市，何老板的家在N号城市。这N座城市间有P(1 &lt;= P &lt;= 40,000) 条双向通行的道路相连，每条道路长度不超过1,000,000。两座城市间可能有多条道路相连。<br>
嵩嵩雇了T(1 &lt;= T &lt;= 200)辆卡车运送这批货物。为了避免被人发现或引起别人的注意，嵩嵩安排这T辆车选择不同的道路行驶，也就是同一条道路不会被走两次。<br>
请帮助嵩嵩安排这T辆车的线路，使得走过的总长度尽量短。<br>
嵩嵩向你保证在不走重复道路的情况下，一定能够把T车货物运到目的地。<br>
注意：题目中描述的“道路”相当于图论中的“边”。<br>
注：题目改编自NKOJ1605。其实是nodgd做1605的时候一开始读错题了，但是既然代码都写好了，总不能浪费了吧，所以就有了这道题！</p>
</blockquote>
<h2 id="输入格式">输入格式</h2>
<blockquote>
<p>第一行包括三个空格间隔的整数N,P,T。<br>
接下来P行，每行有三个空格间隔的整数A,B,C。表示城市A、B间有条长度为C的道路。</p>
</blockquote>
<h2 id="输出格式">输出格式</h2>
<blockquote>
<p>一整数，表示经过的道路总长度的最小值。</p>
</blockquote>
<h2 id="样例输入">样例输入</h2>
<blockquote>
<p>7 9 2<br>
1 2 2<br>
2 3 5<br>
3 7 5<br>
1 4 1<br>
4 3 1<br>
4 5 7<br>
5 7 1<br>
1 6 3<br>
6 7 3</p>
</blockquote>
<h2 id="样例输出">样例输出</h2>
<blockquote>
<p>13</p>
</blockquote>
<h3 id="一点小想法"><em><strong>一点小想法</strong></em></h3>
<blockquote>
<p>费用流模板题，把 <em><strong>1</strong></em> 看成原点 <em><strong>n</strong></em> 看成汇点，每条路的费用就是它的长度，每条路的容量为 <em><strong>1</strong></em>。<br>
只需要注意一点就是只有 <em><strong>t</strong></em> 辆货车，所以当最大流达到 <em><strong>t</strong></em> 时退出找增广路，输出此时的最小费用。</p>
</blockquote>
<h3 id="代码"><em><strong>代码</strong></em></h3>
<pre><code class="language-c">#include &lt;cstdio&gt;
#include &lt;algorithm&gt;
#include &lt;queue&gt;
#include &lt;cstring&gt;
using namespace std;
const int Max = (40000 + 5) &lt;&lt; 3;
int Last[Max];
struct Eg {
    int Next, Child, Cost, Cap;
} egs[Max];
int n, p, t;
void addegs(int num, int fr, int to, int c, int v) {
    egs[num].Child = to;
    egs[num].Cap = c;
    egs[num].Cost = v;
    egs[num].Next = Last[fr];
    Last[fr] = num;
}
int dis[Max], maxflow, mincost, flow[Max], pre[Max], head[Max];
bool vis[Max];
queue&lt;int&gt; q;
bool spfa(int s, int t) {
    memset(dis, 127 / 2, sizeof(dis));
    memset(flow, 127 / 2, sizeof(flow));
    q.push(s);
    dis[s] = 0;
    vis[s] = true;
    pre[t] = -1;
    while(q.size()) {
        int u = q.front();
        q.pop();
        vis[u] = false;
        for (int i = Last[u]; i; i = egs[i].Next) {
            int v = egs[i].Child;
            if(egs[i].Cap &amp;&amp; dis[v] &gt; dis[u] + egs[i].Cost) {
                dis[v] = dis[u] + egs[i].Cost;
                pre[v] = u;
                head[v] = i;
                flow[v] = min(flow[u], egs[i].Cap);
                if(!vis[v]) {
                    vis[v] = true;
                    q.push(v);
                }
            }
        }
    }
    return pre[t] != -1;
}
int s, T;
void mcmf() {
    while(spfa(1, T) &amp;&amp; maxflow &lt; t) {
        int u = T;
        maxflow += flow[T];
        mincost += flow[T] * dis[T];
        while(u != s) {
            egs[head[u]].Cap -= flow[T];
            egs[head[u] ^ 1].Cap += flow[T];
            u = pre[u];
        }
    }
}

int main() {
    scanf(&quot;%d %d %d&quot;, &amp;n, &amp;p, &amp;t);
    int num = 2;
    for(int i = 1; i &lt;= p; i++) {
        int fr, to, c;
        scanf(&quot;%d %d %d&quot;, &amp;fr, &amp;to, &amp;c);
        addegs(num++, fr, to, 1, c);
        addegs(num++, to, fr, 0, -c);
        addegs(num++, to, fr, 1, c);
        addegs(num++, fr, to, 0, -c);
    }
    s = 1;
    T = n;
    mcmf();
    printf(&quot;%d&quot;, mincost);
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[lougu P1168 中位数]]></title>
        <id>https://kakashisese.github.io/post/lougu-p1168-zhong-wei-shu/</id>
        <link href="https://kakashisese.github.io/post/lougu-p1168-zhong-wei-shu/">
        </link>
        <updated>2020-03-22T09:37:42.000Z</updated>
        <content type="html"><![CDATA[<h1 id="lougu-p1168-中位数"><em><strong>lougu P1168 中位数</strong></em></h1>
<h2 id="问题描述">问题描述</h2>
<blockquote>
<p>给出一个长度为N的非负整数序列<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">A_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，对于所有 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>≤</mo><mi>k</mi><mo>≤</mo><mo>(</mo><mi>N</mi><mo>+</mo><mn>1</mn><mo>)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">1≤k≤(N + 1)/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span></span></span></span>，输出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">A_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">A_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, …, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mrow><mn>2</mn><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">A_{2k - 1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span> 的中位数。即前1,3,5个数的中位数。</p>
</blockquote>
<h2 id="输入格式">输入格式</h2>
<blockquote>
<p>第1行为一个正整数N，表示了序列长度。<br>
第2行包含N个非负整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">A_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> (<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">A_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ≤ <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span>)。</p>
</blockquote>
<h2 id="输出格式">输出格式</h2>
<blockquote>
<p>共<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>(</mo><mi>N</mi><mo>+</mo><mn>1</mn><mo>)</mo><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">(N + 1)/2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span></span></span></span>行，第i行为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">A_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">A_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, …, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mrow><mn>2</mn><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">A_{2k - 1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>的中位数。</p>
</blockquote>
<h2 id="样例输入">样例输入</h2>
<blockquote>
<p>7<br>
1 3 5 7 9 11 6</p>
</blockquote>
<h2 id="样例输出">样例输出</h2>
<blockquote>
<p>1<br>
3<br>
5<br>
6</p>
</blockquote>
<h3 id="一点小想法"><em><strong>一点小想法</strong></em></h3>
<blockquote>
<p>关于这道题我想介绍一种 <em><strong>vector</strong></em> 的使用方法，他的主要功效就是维护 <em><strong>vector</strong></em> 里元素的单调性。<br>
这种方法需要用到二分查找里的 <em><strong>upper_bound</strong></em> , 不明白这个用法的点<a href="https://blog.csdn.net/Fire_to_cheat_/article/details/77113364">这里</a>。我们只需要在插入元素前二分出这个元素该插入的的位置，然后再用 <em><strong>insert</strong></em> 插入即可。<br>
最后 <em><strong>vector</strong></em> 中间的元素就是答案。<br>
如果有喜欢我的题解的朋友可以关注我的<a href="https://kakashisese.github.io">博客</a></p>
</blockquote>
<h3 id="代码"><em><strong>代码</strong></em></h3>
<pre><code class="language-c">#include &lt;cstdio&gt;
#include &lt;algorithm&gt;
#include &lt;queue&gt;
#include &lt;cmath&gt;
#include &lt;vector&gt;
using namespace std;
const int Max = 100000 + 5;
int n, a[Max];
vector&lt;int&gt; ve;
int main() {
    scanf(&quot;%d&quot;, &amp;n);
    for (int i = 1; i &lt;= n; i++)
        scanf(&quot;%d&quot;, &amp;a[i]);
    for (int i = 1; i &lt;= n; i++) {
        ve.insert(upper_bound(ve.begin(), ve.end(), a[i]), a[i]); //将元素插入指定位置
        if(i % 2) {
            printf(&quot;%d\n&quot;, ve[i / 2]);
        }
    }
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[「网络流 24 题」搭配飞行员]]></title>
        <id>https://kakashisese.github.io/post/wang-luo-liu-24-ti-da-pei-fei-xing-yuan/</id>
        <link href="https://kakashisese.github.io/post/wang-luo-liu-24-ti-da-pei-fei-xing-yuan/">
        </link>
        <updated>2020-03-22T08:29:07.000Z</updated>
        <content type="html"><![CDATA[<h1 id="网络流-24-题搭配飞行员"><em><strong>「网络流 24 题」搭配飞行员</strong></em></h1>
<h2 id="问题描述">问题描述</h2>
<blockquote>
<p>飞行大队有若干个来自各地的驾驶员，专门驾驶一种型号的飞机，这种飞机每架有两个驾驶员，需一个正驾驶员和一个副驾驶员。由于种种原因，例如相互配合的问题，有些驾驶员不能在同一架飞机上飞行，问如何搭配驾驶员才能使出航的飞机最多。<br>
因为驾驶工作分工严格，两个正驾驶员或两个副驾驶员都不能同机飞行。</p>
</blockquote>
<h2 id="输入格式">输入格式</h2>
<blockquote>
<p>第一行，两个整数 n与 m，表示共有 n个飞行员，其中有 m名飞行员是正驾驶员。<br>
下面有若干行，每行有 2个数字 a、b。表示正驾驶员 a和副驾驶员 b可以同机飞行。<br>
注：正驾驶员的编号在前，即正驾驶员的编号小于副驾驶员的编号。</p>
</blockquote>
<h2 id="输出格式">输出格式</h2>
<blockquote>
<p>仅一行一个整数，表示最大起飞的飞机数。</p>
</blockquote>
<h2 id="样例输入">样例输入</h2>
<blockquote>
<p>10 5<br>
1 7<br>
2 6<br>
2 10<br>
3 7<br>
4 8<br>
5 9</p>
</blockquote>
<h2 id="样例输出">样例输出</h2>
<blockquote>
<p>4</p>
</blockquote>
<h3 id="一点小想法"><em><strong>一点小想法</strong></em></h3>
<blockquote>
<p>这是一道二分图匹配问题。<br>
建图思路就是 <em><strong>给可以一起驾驶飞机的正驾驶员和副驾驶员连一条边，即：给每次输入的a和b连边。</strong></em> 连完后跑一遍二分图匈牙利算法求出最大匹配即可。</p>
</blockquote>
<h3 id="代码"><em><strong>代码</strong></em></h3>
<pre><code class="language-c">#include &lt;cstdio&gt;
#include &lt;algorithm&gt;
#include &lt;vector&gt;
using namespace std;
const int Max = 100 + 5;
vector&lt;int&gt; g[Max];
int n, m, vis[Max], lin[Max], I;
int xyl(int x) { //匈牙利算法
    for (int i = 0; i &lt; g[x].size(); i++) {
        int v = g[x][i];
        if(vis[v] != I) {
            vis[v] = I;
            if(!lin[v] || xyl(lin[v])) {
                lin[v] = x;
                return 1;
            }
        }
    }
    return 0;
}

int main() {
    scanf(&quot;%d %d&quot;, &amp;n, &amp;m);
    int a, b;
    while(scanf(&quot;%d %d&quot;, &amp;a, &amp;b) == 2) { //读入
        g[a].push_back(b); //连边
    }
    int ans = 0;
    for (I = 1; I &lt;= m; I++) //求最大匹配
        ans += xyl(I);
    printf(&quot;%d&quot;, ans);
    return 0;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://kakashisese.github.io/post/hello-gridea/</id>
        <link href="https://kakashisese.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>